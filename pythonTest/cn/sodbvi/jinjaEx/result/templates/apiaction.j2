package {{package}}.apiaction;

import com.hi.framework.controller.SuperAction;
import com.hi.framework.entity.AjaxEntity;
import {{package}}.entity.{{name}};
import {{package}}.service.{{name | title}}Service;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.Map;

@Controller
@RequestMapping(value = "{{uri}}")
public class {{name | replace(name | first,name | first| upper,1)}}Action extends SuperAction<{{name | replace(name | first,name | first| upper,1)}}> {
    @Resource
    private {{name | replace(name | first,name | first| upper,1)}}Service {{name}}Service;

    @ResponseBody
    @RequestMapping(value = "/read.htm", method = RequestMethod.POST)
    public AjaxEntity read() {
        long userId = getUserId(getRequest());
        Map<String, Object> where = getAjaxUtil().getWhereMap();
        where.put("userId", userId);
        return new AjaxEntity({{name}}Service.read(where));
    }

    @ResponseBody
    @RequestMapping(value = "/update.htm", method = RequestMethod.POST)
    public AjaxEntity update() {
        long userId = getUserId(getRequest());
        Map<String, Object> whereMap = getAjaxUtil().getWhereMap();
        whereMap.put("userId", userId);
        return new AjaxEntity(new HashMap() {% raw %}{{{% endraw %}
            put("resultCount",{{name}}Service.update(whereMap, getAjaxUtil().getUpdateMap()));
       {% raw %} }});{% endraw %}
    }

    @ResponseBody
    @RequestMapping(value = "/page.htm", method = RequestMethod.POST)
    public AjaxEntity page() {
        long userId = getUserId(getRequest());
        Map<String, Object> whereMap = getAjaxUtil().getWhereMap();
        whereMap.put("userId", userId);
        return new AjaxEntity({{name}}Service.page(whereMap, getAjaxUtil().getSortColumnMap(), getAjaxUtil().getPageIndex(), getAjaxUtil().getPageSize()));
    }


    @ResponseBody
    @RequestMapping(value = "/list.htm", method = RequestMethod.POST)
    public AjaxEntity list() {
        long userId = getUserId(getRequest());
        Map<String, Object> whereMap = getAjaxUtil().getWhereMap();
        whereMap.put("userId", userId);
        return new AjaxEntity({{name}}Service.list(whereMap, getAjaxUtil().getSortColumnMap()));
    }

    @ResponseBody
    @RequestMapping(value = "/delete.htm", method = RequestMethod.POST)
    public AjaxEntity delete() {
        long userId = getUserId(getRequest());
        Map<String, Object> whereMap = getAjaxUtil().getWhereMap();
        whereMap.put("userId", userId);
        return new AjaxEntity(new HashMap() {% raw %}{{{% endraw %}
            put("resultCount", {{name}}Service.delete(whereMap));
       {% raw %} }});{% endraw %}
    }


}
